trigger:
- master
- develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: secrets
  - group: defaults

steps:
- script: dotnet build ./src/Piral.Blazor.Core --configuration $(buildConfiguration)
  displayName: 'Build Core'

- script: dotnet build ./src/Piral.Blazor.Utils --configuration $(buildConfiguration)
  displayName: 'Build Utils'

- script: |
    dotnet build ./src/Piral.Blazor.Core --configuration $(buildConfiguration) --output ./dist
    cd dist
    cp ../package-template.json ./package.json
    export TARGET_VERSION=`node -e 'console.log(Object.keys(require("./Piral.Blazor.Utils.deps.json").libraries)[0].split("/").pop())'`
    npm version $TARGET_VERSION
    echo _auth=$(npmToken) >> .npmrc
    echo always-auth=true >> .npmrc
    cd ..
  displayName: 'Prepare NPM Package'

- script: |
    cd dist
    sed -i -e "s/\(\"version\":\\s\+\"\([0-9]\+\.\?\)\+\)/\1-pre.$BUILD_BUILDNUMBER/" ./package.json;
    cat .npmrc
    npm publish --tag next
    cd ..
  displayName: 'Publish Pre-Package on NPM'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: |
    cd dist
    npm publish --tag latest
    cd ..
  displayName: 'Publish Package on NPM'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: rm -rf dist
  displayName: 'Reset Output'

- script: dotnet pack ./src/Piral.Blazor.Core --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack Core (Pre)'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: dotnet pack ./src/Piral.Blazor.Core --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack Core'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: dotnet pack ./src/Piral.Blazor.Utils --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack Utils (Pre)'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: dotnet pack ./src/Piral.Blazor.Utils --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack Utils'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: dotnet pack ./src/Piral.Blazor.Template --configuration $(buildConfiguration) --version-suffix pre.$BUILD_BUILDNUMBER --output ./dist
  displayName: 'Pack Template (Pre)'
  condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))

- script: dotnet pack ./src/Piral.Blazor.Template --configuration $(buildConfiguration) --output ./dist
  displayName: 'Pack Template'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: NuGetCommand@2
  displayName: 'Publish Packages on NuGet'
  inputs:
    command: 'push'
    packagesToPush: 'dist/*.nupkg'
    publishFeedCredentials: 'nuget'
    nuGetFeedType: 'external'
